{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Testing-Projects\\\\Todo_project\\\\frontend\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItem] = useState([]);\n  const [isUpdate, setIsUpdate] = useState('');\n  const [updateItemText, setUpdateItemText] = useState('');\n  const addItem = async e => {\n    try {\n      e.preventDefault();\n      const res = await axios.post(\"http://localhost:5500/user/api/item\", {\n        item: itemText\n      });\n      // console.log(res);       \n      setListItem(prev => [...prev, res.data]);\n      setItemText('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //create function to fetch all to items from database -- we wil use useEffect hook\n\n  useEffect(() => {\n    const getItemList = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5500/user/api/items\");\n        setListItem(res.data);\n        console.log('render');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getItemList();\n  }, []);\n\n  //Delete item when click on delete button\n\n  const deleteItem = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5500/user/api/item/${id}`);\n      console.log(res.data);\n      const newListItems = listItems.filter(item => item._id !== id);\n      setListItem(newListItems);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Update\n\n  const updateItem = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.put(`http://localhost:5500/user/api/item/${isUpdate}`, {\n        item: updateItemText\n      });\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdate);\n      const updatedItem = listItems[upda];\n      setUpdateItemText('');\n      setIsUpdate('');\n      console.log(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //before updating item we need to show input filed where we will create our update item\n\n  const renderUpdatedForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"update-form\",\n      onSubmit: e => {\n        updateItem(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"update-new-input\",\n        placeholder: \"New Item\",\n        onChange: e => {\n          setUpdateItemText(e.target.value);\n        },\n        value: updateItemText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-new-btn\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Main Component \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    onSubmit: e => addItem(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Todo Item\",\n        onChange: e => {\n          setItemText(e.target.value);\n        },\n        value: itemText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-listItems\",\n      children: listItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: isUpdate === item._id ? renderUpdatedForm() : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-content\",\n            children: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-item\",\n            onClick: () => {\n              setIsUpdate(item._id);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-item\",\n            onClick: () => {\n              deleteItem(item._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"O09Q7+uM7CZDNvmQCk4CK64knZo=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","itemText","setItemText","listItems","setListItem","isUpdate","setIsUpdate","updateItemText","setUpdateItemText","addItem","e","preventDefault","res","post","item","prev","data","err","console","log","getItemList","get","deleteItem","id","delete","newListItems","filter","_id","updateItem","put","updatedItemIndex","findIndex","updatedItem","upda","renderUpdatedForm","className","onSubmit","children","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Testing-Projects/Todo_project/frontend/src/Todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction Todo() {\r\n\r\n    const [itemText, setItemText] = useState('')\r\n    const [listItems, setListItem] = useState([])\r\n    const [isUpdate, setIsUpdate] = useState('')\r\n    const [updateItemText, setUpdateItemText] = useState('')\r\n    const addItem = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const res = await axios.post(\"http://localhost:5500/user/api/item\", { item: itemText })\r\n            // console.log(res);       \r\n            setListItem(prev => [...prev, res.data])\r\n            setItemText('')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    //create function to fetch all to items from database -- we wil use useEffect hook\r\n\r\n    useEffect(() => {\r\n        const getItemList = async () => {\r\n            try {\r\n                const res = await axios.get(\"http://localhost:5500/user/api/items\")\r\n                setListItem(res.data)\r\n                console.log('render')\r\n\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getItemList();\r\n    }, [])\r\n\r\n    //Delete item when click on delete button\r\n\r\n    const deleteItem = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`http://localhost:5500/user/api/item/${id}`)\r\n            console.log(res.data);\r\n            const newListItems = listItems.filter(item => item._id !== id);\r\n            setListItem(newListItems);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    //Update\r\n\r\n    const updateItem = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.put(`http://localhost:5500/user/api/item/${isUpdate}`, { item: updateItemText })\r\n            const updatedItemIndex = listItems.findIndex(item => item._id === isUpdate)\r\n            const updatedItem = listItems[upda]\r\n            setUpdateItemText('')\r\n            setIsUpdate('')\r\n            console.log(res.data)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    //before updating item we need to show input filed where we will create our update item\r\n\r\n    const renderUpdatedForm = () => {\r\n        return (\r\n            <form className=\"update-form\" onSubmit={e => { updateItem(e) }} >\r\n                <input type=\"text\" className=\"update-new-input\" placeholder=\"New Item\" onChange={e => { setUpdateItemText(e.target.value) }} value={updateItemText} />\r\n                <button className=\"update-new-btn\" type=\"submit\" >Update</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // Main Component \r\n\r\n    return (\r\n        <div className=\"container\" onSubmit={e => addItem(e)}>\r\n            <h1>Todo List</h1>\r\n            <form className=\"form\" >\r\n                <input type=\"text\" placeholder=\"Add Todo Item\" onChange={e => { setItemText(e.target.value) }} value={itemText} />\r\n                <button type=\"submit\" >Add</button>\r\n            </form>\r\n            <div className=\"todo-listItems\" >\r\n                {\r\n                    listItems.map(item => (\r\n                        <div className=\"todo-item\" key={item._id} >\r\n                            {\r\n                                isUpdate === item._id\r\n                                    ? renderUpdatedForm()\r\n                                    : <>\r\n                                        <p className=\"item-content\">{item.item}</p>\r\n                                        <button className=\"update-item\" onClick={() => { setIsUpdate(item._id) }} >Update</button>\r\n                                        <button className=\"delete-item\" onClick={() => { deleteItem(item._id) }} >Delete</button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n\r\n\r\n\r\n                {/* <div className=\"todo-item\" >\r\n                    <p className=\"item-content\" >this is the item</p>\r\n                    <button className=\"update-item\" >Update</button>\r\n                    <button className=\"delete-item\" >delete</button>\r\n                </div>\r\n                <div className=\"todo-item\" >\r\n                    <p className=\"item-content\" >this is the item</p>\r\n                    <button className=\"update-item\" >Update</button>\r\n                    <button className=\"delete-item\" >delete</button>\r\n                </div>\r\n                <div className=\"todo-item\" >\r\n                    <p className=\"item-content\" >this is the item</p>\r\n                    <button className=\"update-item\" >Update</button>\r\n                    <button className=\"delete-item\" >delete</button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}