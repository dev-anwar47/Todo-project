{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Testing-Projects\\\\Todo_project\\\\frontend\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Todo() {\n  _s();\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItem] = useState([]);\n  const [isUpdate, setIsUpdate] = useState('');\n  const addItem = async e => {\n    try {\n      e.preventDefault();\n      const res = await axios.post(\"http://localhost:5500/user/api/item\", {\n        item: itemText\n      });\n      // console.log(res);       \n      setListItem(prev => [...prev, res.data]);\n      setItemText('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //create function to fetch all to items from database -- we wil use useEffect hook\n\n  useEffect(() => {\n    const getItemList = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:5500/user/api/items\");\n        setListItem(res.data);\n        console.log('render');\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getItemList();\n  }, []);\n\n  //Delete item when click on delete button\n\n  const deleteItem = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5500/user/api/item/${id}`);\n      console.log(res.data);\n      const newListItems = listItems.filter(item => item._id !== id);\n      setListItem(newListItems);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Update\n  //before updating item we need to show input filed where we will create our update item\n\n  const renderUpdatedForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"update-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"update-new-input\",\n        placeholder: \"New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-new-btn\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  };\n\n  //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    onSubmit: e => addItem(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Todo Item\",\n        onChange: e => {\n          setItemText(e.target.value);\n        },\n        value: itemText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-listItems\",\n      children: listItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: isUpdate === item._id ? renderUpdatedForm : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-content\",\n            children: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-item\",\n            onClick: () => {\n              setIsUpdate(item._id);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-item\",\n            onClick: () => {\n              deleteItem(item._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Todo, \"ROJ0qRumZdYD7JXz+sbD+kLGCIE=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","itemText","setItemText","listItems","setListItem","isUpdate","setIsUpdate","addItem","e","preventDefault","res","post","item","prev","data","err","console","log","getItemList","get","deleteItem","id","delete","newListItems","filter","_id","renderUpdatedForm","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","onSubmit","onChange","target","value","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Testing-Projects/Todo_project/frontend/src/Todo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction Todo() {\r\n\r\n    const [itemText, setItemText] = useState('')\r\n    const [listItems, setListItem] = useState([])\r\n    const [isUpdate, setIsUpdate] = useState('')\r\n    const addItem = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            const res = await axios.post(\"http://localhost:5500/user/api/item\", { item: itemText })\r\n            // console.log(res);       \r\n            setListItem(prev => [...prev, res.data])\r\n            setItemText('')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    //create function to fetch all to items from database -- we wil use useEffect hook\r\n\r\n    useEffect(() => {\r\n        const getItemList = async () => {\r\n            try {\r\n                const res = await axios.get(\"http://localhost:5500/user/api/items\")\r\n                setListItem(res.data)\r\n                console.log('render')\r\n\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getItemList();\r\n    }, [])\r\n\r\n    //Delete item when click on delete button\r\n\r\n    const deleteItem = async (id) => {\r\n        try {\r\n            const res = await axios.delete(`http://localhost:5500/user/api/item/${id}`)\r\n            console.log(res.data);\r\n            const newListItems = listItems.filter(item => item._id !== id);\r\n            setListItem(newListItems);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    //Update\r\n    //before updating item we need to show input filed where we will create our update item\r\n\r\n    const renderUpdatedForm = () => {\r\n        return (\r\n            <form className=\"update-form\" >\r\n                <input className=\"update-new-input\" placeholder=\"New Item\" />\r\n                <button className=\"update-new-btn\" type=\"submit\" >Update</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    //\r\n    return (\r\n        <div className=\"container\" onSubmit={e => addItem(e)}>\r\n            <h1>Todo List</h1>\r\n            <form className=\"form\" >\r\n                <input type=\"text\" placeholder=\"Add Todo Item\" onChange={e => { setItemText(e.target.value) }} value={itemText} />\r\n                <button type=\"submit\" >Add</button>\r\n            </form>\r\n            <div className=\"todo-listItems\" >\r\n                {\r\n                    listItems.map(item => (\r\n                        <div className=\"todo-item\" key={item._id} >\r\n                            {\r\n                                isUpdate === item._id\r\n                                    ? renderUpdatedForm\r\n                                    : <>\r\n                                        <p className=\"item-content\">{item.item}</p>\r\n                                        <button className=\"update-item\" onClick={() => { setIsUpdate(item._id) }} >Update</button>\r\n                                        <button className=\"delete-item\" onClick={() => { deleteItem(item._id) }} >Delete</button>\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n\r\n\r\n\r\n                {/* <div className=\"todo-item\" >\r\n                    <p className=\"item-content\" >this is the item</p>\r\n                    <button className=\"update-item\" >Update</button>\r\n                    <button className=\"delete-item\" >delete</button>\r\n                </div>\r\n                <div className=\"todo-item\" >\r\n                    <p className=\"item-content\" >this is the item</p>\r\n                    <button className=\"update-item\" >Update</button>\r\n                    <button className=\"delete-item\" >delete</button>\r\n                </div>\r\n                <div className=\"todo-item\" >\r\n                    <p className=\"item-content\" >this is the item</p>\r\n                    <button className=\"update-item\" >Update</button>\r\n                    <button className=\"delete-item\" >delete</button>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}